name: Test Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Node ${{ matrix.node-version }} auf ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run tests
        run: npm test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node-version }}-${{ matrix.os }}
          path: coverage/
          if-no-files-found: ignore
          
      - name: Check test coverage
        if: matrix.os == 'ubuntu-latest' # FÃ¼hre den Coverage-Check nur auf einem Betriebssystem aus
        run: |
          COVERAGE=$(node -e "const fs=require('fs'); const coverage=JSON.parse(fs.readFileSync('./coverage/coverage-summary.json')); console.log(coverage.total.lines.pct);")
          echo "Test coverage: $COVERAGE%"
          node -e "if (parseFloat(process.env.COVERAGE) < 80) { console.error('Test coverage is below 80%'); process.exit(1); }"
        env:
          COVERAGE: $COVERAGE
